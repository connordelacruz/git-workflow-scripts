#!/usr/bin/env bash
set -o errexit
# ==============================================================================
# workflow-unset-commit-template
# Author: Connor de la Cruz (connor.c.delacruz@gmail.com)
# ------------------------------------------------------------------------------
# Usage: workflow-unset-commit-template [-b <branch>] [-D] [-V] [-h]
#
# Run workflow-unset-commit-template -h for details.
# ------------------------------------------------------------------------------
# For use with workflow-commit-template
#
# Unset branch's git config for commit.template. Template file will be deleted
# unless -D argument was specified.
# ------------------------------------------------------------------------------
# For more information, see workflow-unset-commit-template section in README.md
# ==============================================================================

# Imports ----------------------------------------------------------------------
readonly SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
readonly UTIL_DIR="$SCRIPT_DIR/util"
source "$UTIL_DIR/ALL.sh"

# Functions --------------------------------------------------------------------

show_help() {
    echo "Usage: workflow-unset-commit-template [-b <branch>] [-D] [-V] [-h]"
    echo "Options:"
    echo "  -b <branch>  Specify branch to unset template for (default: current branch)."
    echo "  -D           Don't delete commit template file."
    echo '  -V           Print version number and exit.'
    echo "  -h           Show this help message and exit."
}

# Main -------------------------------------------------------------------------

main() {
    # Parse Arguments ----------------------------------------------------------
    # -D don't delete template file
    # -b <branch> unset a different branch
    local arg_no_delete arg_branch_name
    while getopts 'Db:hV' opt; do
        case ${opt} in
            D)
                arg_no_delete=1
                ;;
            b)
                arg_branch_name="$OPTARG"
                ;;
            V)
                show_version_and_exit
                ;;
            h|?)
                show_help
                [[ "$opt" = "?" ]] && local exit_code=1 || local exit_code=0
                exit $exit_code
                ;;
        esac
    done
    shift $((OPTIND -1))
    # Verify Git ---------------------------------------------------------------
    # Check git version > 2.23 and that we're in a repo currently
    local version_check="$(verify_git_version)"
    [[ -n "$version_check" ]] && echo_error "$version_check" && exit 1
    verify_git_repo
    # Get Configs for Branch ---------------------------------------------------
    local branch_name="${arg_branch_name:-$(git_current_branch)}"
    local branch_config_file="$(git config --local --includes --get includeif.onbranch:${branch_name}.path)"
    [[ -z "$branch_config_file" ]] && echo "No config file specified for branch $branch_name." && exit
    local repo_root_dir="$(git_repo_root)"
    # TODO check if initialized, otherwise use --show-origin to find the target file?
    local workflow_config_path="$(git config --local --includes --get workflow.configpath)"
    local branch_config_path="$repo_root_dir/.git/$branch_config_file"
    local commit_template_file="$(git config -f "$branch_config_path" --get commit.template)"
    local commit_template_path="$repo_root_dir/$commit_template_file"
    # Unset Config -------------------------------------------------------------
    echo "Unsetting branch config include..."
    git config -f "$workflow_config_path" --unset includeIf.onbranch:${branch_name}.path
    echo_success "Local repo updated." \
                 "Will no longer include configs from .git/$branch_config_file" \
                 "when on branch $branch_name."
    echo "Deleting branch config file .git/$branch_config_file..."
    rm "$branch_config_path"
    echo_success "Branch config file removed."
    # Remove Commit Template ---------------------------------------------------
    # (Unless -D was specified)
    if [[ -z "$commit_template_file" ]]; then
        echo_warning "Template file $commit_template_file not found."
        exit
    fi
    if [[ -n "$arg_no_delete" ]]; then
        echo_warning "-D was specified, leaving template file $commit_template_file."
    else
        echo "Removing commit template file $commit_template_file..."
        rm "$commit_template_path"
        echo_success "Removed $commit_template_path"
    fi
}
main "$@"
